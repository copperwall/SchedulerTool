publicusers
*  StudentDB(Class) - Chase
   * students(Collection of all Students)
   * Student getStudent(String username)
   * void editStudent(Student)
   * void addStudent(Student)
* Public View(Class extends View) - Calvin
   *  currentUser(User)
   *  void setUser(User)
   * User getUser()
   *  void vote()
   *  void viewPreferences()
*  Student(Class extends User) - Chase
   * votes(Collection of Votes)
   *  Vote getVotes(Term)
   * void setVotes(Term, Votes)
 
admin
* LocationDB(Class) - Chase
   * locations(Collection of all Locations)
   * void addLocation(Location)
   * void editLocation(Location)
   * void deleteLocation(Location)
* Admin(Class) - Chase
   * settings(Settings)
   * Settings getSettings()
* Admin View(Class extends View) - Calvin
   * admin(Admin)
   *  Schedule generate(Term, Admin)
   *  void publish(Term)
   * void openSettings()
   * void manageDatabases()
* Settings(Class) - Chase
   * startTime(int)
   * endTime(int)
   * void setStartTime(int)
   * void setEndTime(int)
   * int getStartTime()
   * int getEndTime()


data
* Instructor(Class implements User) - Chase
   * workTimeUnits(int)
   * timePrefs(Collection of Days)
   * classPrefs(Collection of ints)
   * active(Boolean)
   * prefsLocked(Boolean)
   * firstName (String)
   * lastName (String)
   * Collection of Days getTimePrefs()
   * void setTimePrefs(Collection of Days)
   * int getWorkTimeUnits()
   * void setWorkTimeUnits(int)
   * Collection of ints getAllClassPrefs()
   * int getOneClassPref(Course, int)
   * void setAllClassPrefs(Collection of ints)
   * void setOneClassPref(Course, int)
   * boolean getActive()
   * void setActive(boolean)
   * void setPrefsLocked(boolean)
   * boolean getPrefsLocked()
   * String getFirstName()
   * void setFirstName (String)
   * String getLastName()
   * void setLastName (String)
   * String getFullName()
* Course(Class) - Chase is great at everything!!
   * prefix (string)
   * courseNum(int)
   * hasLab(Boolean)
   * units(int)
   * labLength (double)
   * String getPrefix()
   * void setPrefix(String)
   * int getCourseNum()
   * void setCourseNum(int)
   * boolean getHasLab()
   * void setHasLab(boolean)
   * int getUnits()
   * void setUnits(int)
   * double getLabLength()
   * void setLabLength(double)
   * String getCourseID()
* Location(Class) - Chase
   * buildingNum(int)
   * roomNum(int)
   * hasEquipment(boolean)
   * capacity(int)
   * int getBuildingNum()
   * void setBuildingNum(int)
   * int getRoomNum()
   * void setRoomNum(int)
   * boolean getHasEquipment()
   * void setHasEquipment(boolean)
   * int getCapacity()
   * void setCapacity(int)
* Schedule(Class) - Calvin
   * sections(Collection of Sections)
   * setAllSections(Collection of Sections)
   * Collection of Sections getAllSections()
   * void setOneSection(Section)
   * Section getOneSection(int, Course)
* Section(Class) - Chase
   * course(Course)
   * sectionNum(int)
   * instructor(Instructor)
   * location(Location)
   * isLab(Boolean)
   * days (Collection of days)
   * linkedSectionNum(int)
   * void setSectionNum(int)
   * int getSectionNum()
   * void setCourse(Course)
   * Course getCourse()
   * void setInstructor(Instructor)
   * Instructor getInstructor()
   * void setLocation(Location)
   * Location getLocation()   
   * void setDays(Collection of Days)
   * Collection of Days getDays()
   * int getLinkedSectionNum()
   * void setLinkedSectionNum(int)
* Term(Class) - Calvin
   *  schedule(Schedule)
   *  votes(Collection of Votes)
   * availableSections(Collection of Sections)
   * voteLock(Date)
   * prefLock(Date)
   * year (int)
   * season (int)
   * Schedule getSchedule()
   * void setSchedule(Schedule)
   * Collection of Votes getVotes()
   * void setVotes(Collection of Votes)
   * Collection of Sections getSections()
   * void setSections(Collection of Section)
   * Date getVoteLock()
   * void setVoteLock(Date)
   * Date getPrefLock()
   * void setPrefLock(Date)
   * int getYear()
   * void setYear(int)
   * int getSeason()
   * void setSeason(int)
* Day(Class) - Chase
   * hourAvailability(Collection of Booleans)
   * setAvailability(Collection of Booleans)
   * Collection of Booleans getAvailability()
*  User(abstract class) - Jarred
   * username (string)
   * void setUsername(String)
   * String getUsername()
* View(Class) - Jarred
   *  currentSchedule(Schedule)
   *  currentTerm(Term)
   * terms(Terms Database)
   * void changeTerm(Term)
   * void viewSchedule()
* Vote(Class) - Jarred
   * courses(Collection of 4 Courses)
   * void setCourses(Collection of 4 Courses)
   * Collection of 4 Courses getCourses()
* TermsDB(Class) - Jarred
   * terms (Collection of all Terms)
   * Term getTerm(int courseNum)
   * void addTerm(Term term)
   * void editTerm(Term term)
   * void deleteTerm(Term term)
* CourseDB(Class) - Jarred
   * courses (Collection of all Courses)
   * Course getCourse(int courseNum)
   * void addCourse(Course course)
   * void editCourse(Course course)
   * void deleteCourse(int courseNum)
* InstructorDB(Class) - Calvin
   * instructors (Collection of all Instructors)
   * Instructor getInstructor(String)
   * void addInstructor(Instructor instructor)
   * void editInstructor(Instructor instructor)
   * void deleteInstructor(Instructor instructor)